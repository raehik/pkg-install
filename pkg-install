#!/usr/bin/env bash
#
# Install selected packages using files from a directory.
#

pkgfile_dir="packages"

aur_helper_cmd="yaourt -Sya"
pkg_install_cmd="sudo pacman -Sy"

CMD_FILE_IDENT="# COMMAND FILE"

COMMENT_IDENT="#"
AUR_IDENT="aur: "
INCLUDE_IDENT="include "

ORIG_PWD="$(pwd)"

pkg_list=

process_pkg_file() {
    echo "PACKAGE FILE: $1"
    while read line; do
        case "$line" in
            "")
                # empty line, skip w/o logging
                continue
                ;;

            "$INCLUDE_IDENT"*)
                # specifying package file(s) to include
                process_include "$line"
                ;;

            "$AUR_IDENT"*)
                # aur package(s)
                process_aur_pkgs "$line"
                ;;

            "$COMMENT_IDENT"*)
                # comment
                process_comment "$line"
                ;;

            *)
                # normal line indicating package(s)
                process_pkgs "$line"
                ;;
        esac
    done < "$1"
}

process_comment() {
    echo "COMMENT: $1"
}

process_include() {
    include_pkgs="$(cut --complement -d " " -f 1 <<< "$1")"
    echo "INCLUDE: $include_pkgs"

    for file in $include_pkgs; do
        # recursion boys
        process_pkg_file "$pkgfile_dir/$file"
    done
}

process_aur_pkgs() {
    aur_pkgs="$(cut --complement -d " " -f 1 <<< "$1")"
    echo "AUR: $aur_pkgs"
    aur_pkg_list+="$aur_pkgs "
}

process_pkgs() {
    echo "PACKAGES: $1"
    pkg_list+="$1 "
}

case $@ in
    all) pkg_files="$(find "$pkgfile_dir" -type f -printf "%f\n")" ;;
    *) pkg_files="$@" ;;
esac

for file in $pkg_files; do
    cur_file="$pkgfile_dir/$file"

    # decide if the file should be parsed as shell commands or packages to
    # install
    if [[ "$(head -n1 "$cur_file")" == "$CMD_FILE_IDENT" ]]; then
        echo "Command file found, sourcing $cur_file"
        source "$cur_file"

        # reset directory
        cd "$ORIG_PWD"
    else
        process_pkg_file "$cur_file"
    fi
done

# AUR packages
if [[ "$aur_pkg_list" ]]; then
    $aur_helper_cmd $aur_pkg_list
fi

# normal packages
if [[ "$pkg_list" ]]; then
    $pkg_install_cmd $pkg_list
fi
